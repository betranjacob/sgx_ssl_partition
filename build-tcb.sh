#!/usr/bin/env bash

# this script parses a function list generated by gen-func-lists:
#  - searches source files located in search_folders for function names 
#  - copies the source of found functions to an output file

# prefixes
function_list=results/function_list
output_prefix=tcb_sources
output_prefix_NF=tcb_sources_NF	# not found
output_prefix_MF=tcb_sources_MF # multiple files
output_prefix_LIBC=tcb_sources_LIBC # libc functions

search_folders="./build/libressl-2.4.1/ssl \
                ./build/libressl-2.4.1/crypto \
                ./build/opensgx/user/test/openssl \
                ./build/nginx-1.11.1/src"

declare -a arr=("stock" "outside" "inside")



# generate the function lists
./gen-func-lists.sh

# loop through the suffix array
for TEST_SUFFIX in "${arr[@]}"
do
	# current list to process
	FUNCTION_LIST=${function_list}_${TEST_SUFFIX}.txt

	# check if it exists
	if [ ! -f $FUNCTION_LIST ]; then
		echo "${FUNCTION_LIST} does not exist."
		continue
	fi

	# working files
	output=results/${output_prefix}_${TEST_SUFFIX}.c
	not_found=results/${output_prefix_NF}_${TEST_SUFFIX}.txt
	multiple_files=results/${output_prefix_MF}_${TEST_SUFFIX}.txt
	libc_functions=results/${output_prefix_LIBC}_${TEST_SUFFIX}.txt

	# create or clear
	> "$output"
	> "$not_found"
	> "$multiple_files"
	> "$libc_functions"

	# figure out the indentation
	# fun_len=egrep -n "^.{$(wc -L < ${FUNCTION_LIST} )}$" $FUNCTION_LIST

	# loop on function name
	while read NAME
	do
	  # echo "$NAME"

	  # grep .c files in search folders for lines starting with function name
	  # these have to be the function definitions
	  file=$(grep -rl --include \*.c "^$NAME(" ${search_folders})
	  # echo "$file"

	  # make sure only one file was returned
	  if [[ $(grep -c . <<< "$file") > 1 ]];
	  then
	    echo "$NAME found in multiple files."
	    echo "$NAME" >> "$multiple_files"
	  else
	    # check if we found the function
	    if [[ -z "${file// }" ]];
	    then
          # didn't find, check if its a libc function
	      if [[ $(grep -c $NAME /lib/x86_64-linux-gnu/libc.so.6) > 0 ]];
	      then
	        echo "$NAME is a libc function"
	        echo "$NAME" >> "$libc_functions"
	      else  	
	        echo "$NAME not found"
	        echo "$NAME" >> "$not_found"
	      fi
	    else
	      printf "%-30s %-40s\n" $NAME "in: ${file}"

	      # grep again to get the function type
	      preamble=$(grep -h -r --include \*.c "^$NAME(" ${search_folders} -B1 | head -n 1)
	      # this sed query returns lines between those that start with
	      # "function_name(" and "}"
	      result=$(sed -n "/^$NAME(/,/^}/p" "$file")
	      
	      # write output to file
	      echo "$preamble" >> "$output"
	      echo "$result" >> "$output"
	      printf "\n\n" >> "$output"
	    fi	
	  fi
	done < $FUNCTION_LIST
done

# print out the tcb results
for TEST_SUFFIX in "${arr[@]}"
do
	TCB=results/${output_prefix}_${TEST_SUFFIX}.c
	printf "\n$TEST_SUFFIX"
	cloc --quiet $TCB
done

printf "\nenclave program"
cloc --quiet build/opensgx/user/test/openssl/libressl-pipe.c